version: '3.9'

services:
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:5000

  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    ports:
      - '5000:5000'
    depends_on:
      - postgres
      - redis
      - rabbitmq
      - elasticsearch
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Postgres=Host=postgres;Port=5432;Database=app_db;Username=postgres;Password=postgres
      - Redis__Host=redis
      - RabbitMQ__Host=rabbitmq
      - ElasticSearch__Uri=http://elasticsearch:9200
      - Seq__ServerUrl=http://seq:5341

  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: app_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - '6379:6379'

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - '5672:5672'
      - '15672:15672'

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10
    environment:
      - discovery.type=single-node
    ports:
      - '9200:9200'

  fluentd:
    image: fluent/fluentd:v1.16-debian-1
    build:
      context: ./tools/fluentd
      dockerfile: Dockerfile
    volumes:
      - ./tools/fluentd/conf:/fluentd/etc
    ports:
      - '24224:24224'
      - '24224:24224/udp'

  seq:
    image: datalust/seq:latest
    ports:
      - '5341:80'
    environment:
      - ACCEPT_EULA=Y

volumes:
  pgdata:
