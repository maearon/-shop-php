version: '3.9'

services:
  frontend:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
      target: production
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    ports:
      - "3000:3000"
    depends_on:
      - api-gateway

  api-gateway:
    build:
      context: ./apps/gateway
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - users
      - products
      - orders
      - stripe
    environment:
      - PORT=8080
      - NODE_ENV=production

  users:
    build:
      context: ./services/users
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:postgres@db:5432/users
    depends_on:
      - db

  products:
    build:
      context: ./services/products
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:postgres@db:5432/products
    depends_on:
      - db

  orders:
    build:
      context: ./services/orders
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:postgres@db:5432/orders
    depends_on:
      - db
      - redis
      - rabbitmq

  stripe:
    build:
      context: ./services/stripe
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - STRIPE_SECRET_KEY=sk_test_...
      - NODE_ENV=production

  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3-management
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672" # Management UI

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data

volumes:
  postgres_data:
  esdata:
